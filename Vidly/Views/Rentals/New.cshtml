@{
    ViewBag.Title = "New Rental";
}

<h2>New Rental</h2>



<div class="row">
    <div class="col-md-6 col-sm-6">
        <form id="newRental">
            <div class="form-group">
                <label>Customer</label>
                <div class="tt-container">
                    <input id="customer" name="customer" data-rule-validCustomer="true" type="text" value="" class="form-control" />
                </div>
            </div>

            <div class="form-group">
                <label>Movie</label>
                <div class="tt-container">
                    <input id="movie" name="movie" data-rule-atLeastOneMovie="true" type="text" value="" class="form-control" />
                </div>
            </div>

            <br />
            <ul id="movies" class="list-group"></ul>

            <br/>

            <button class="btn btn-primary">Submit</button>
        </form>
    </div>
</div>

@section Scripts
{
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation/dist/additional-methods.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>

    <script>
        $(document).ready(function() {
            var vm = {
                movieIdCollection: []
            };

            var customers = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('fullName'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/api/customers?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#customer').typeahead({
                minLength: 3,
                highlight: true
            }, {
                name: 'customers',
                display: 'fullName',
                source: customers
            }).on("typeahead:select", function(e, customer){
                vm.customerId = customer.id;
            });

            var movies = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/api/movies?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#movie').typeahead({
                minLength: 3,
                highlight: true
            }, {
                name: 'movies',
                display: 'name',
                source: movies
            }).on("typeahead:select", function (e, movie) {
                $("#movies").append(`<li class='list-group-item'>${movie.name}</li>`);

                $("#movie").typeahead("val", "");

                vm.movieIdCollection.push(movie.id)
            });

            $.validator.addMethod("validCustomer", function(){
                return vm.customerId && vm.customreId !== 0;
            }, "Please select a valid customer.");
            
            $.validator.addMethod("atLeastOneMovie", function(){
                return vm.movieIdCollection.length > 0;
            }, "Please select at least 1 movie.");

            var validator = $("#newRental").validate({
                submitHandler: function() {
                    $.ajax({
                        contentType: "application/json",
                        url: "/api/newRentals",
                        method: "POST",
                        data: JSON.stringify(vm),
                    })
                    .done(function() {
                        toastr.success("Rentals successfully recorded.");

                        $("#customer").typeahead("val", "");
                        $("#movie").typeahead("val", "");
                        $("#movies").empty();

                        vm = {movieIdCollection: []};

                        validator.resetForm();
                    })
                    .fail(function() {
                        toastr.error("Something unexpected happened.");
                    });

                    return false;
                }
            });
        });
    </script>
}